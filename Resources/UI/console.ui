<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>ConsoleWidget</class>
 <widget class="QWidget" name="ConsoleWidget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>915</width>
    <height>394</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>ConsoleWidget</string>
  </property>
  <property name="styleSheet">
   <string notr="true">/* Console QWidget */
#ConsoleWidget {
	background-color: #1e1e1e;  /* Dark gray background */
    border-radius: 4px;          /* Rounded corners */
}

/* QToolTip */
QToolTip {
    background-color: #2e2e2e;   /* Dark gray background */
    color: #ffffff;              /* White text */
    border: 1px solid #5b5e60;   /* Light gray border */
    padding: 4px;                /* Padding for the tooltip */
    border-radius: 4px;          /* Rounded corners */
    opacity: 200;                /* Slight transparency */
    font-size: 12px;             /* Slightly smaller font size for readability */
}

/* QMenuBar */
QMenuBar {
    background-color: #2e2e2e;    /* Dark gray background */
    color: #ffffff;               /* White text */
    border-bottom: 1px solid #5b5e60;  /* Light gray border for separation */
}

QMenuBar::item {
    background-color: transparent; /* Transparent background */
    padding: 6px 6px;             /* Padding for menu items */
    color: #ffffff;                /* White text */
}

QMenuBar::item:selected {          /* Hovered menu item */
    background-color: #4a90e2;     /* Light blue on hover */
    color: #ffffff;                /* Ensure text remains white */
}

QMenuBar::item:pressed {           /* Pressed menu item */
    background-color: #3d78b2;     /* Darker blue on press */
    color: #ffffff;                /* Ensure text remains white */
}

/* QMenu */
QMenu {
    background-color: #2e2e2e;     /* Dark gray background for menus */
    border: 1px solid #5b5e60;     /* Light gray border */
}

QMenu::item {
    background-color: transparent; /* Transparent background for menu items */
    color: #ffffff;                /* White text */
	padding: 6px;
    margin-left: 6px;             /* Padding for each menu item */
}

QMenu::item:selected {             /* Hovered menu item */
    background-color: #4a90e2;     /* Light blue background on hover */
    color: #ffffff;                /* Ensure text remains white */
}

QMenu::item:pressed {              /* Pressed menu item */
    background-color: #3d78b2;     /* Darker blue background on press */
    color: #ffffff;                /* Ensure text remains white */
}

QMenu::separator {
    height: 1px;
    background-color: #5b5e60;     /* Light gray separator between items */
}

/* QMenu::indicator (checkboxes and radio buttons in menus) */
QMenu::indicator {
    width: 16px;
    height: 16px;
    background-color: #2e2e2e;     /* Dark gray background for indicators */
    border: 1px solid #5b5e60;     /* Light gray border */
    border-radius: 2px;            /* Slightly rounded corners */
}

QMenu::indicator:checked {
    background-color: #4a90e2;     /* Light blue when checked */
    border-color: #3d78b2;         /* Darker blue border when checked */
}

QMenu::indicator:unchecked {
    background-color: #2e2e2e;     /* Keep the dark gray when unchecked */
    border-color: #5b5e60;         /* Light gray border when unchecked */
}

/* QToolBar */
QToolBar {
    background-color: #2e2e2e;      /* Dark gray background */
    border: 1px solid #5b5e60;      /* Light gray border */
    padding: 4px;                   /* Padding inside the toolbar */
    spacing: 4px;                   /* Spacing between toolbar buttons */
}

QToolBar::handle {
    background-color: #5b5e60;      /* Light gray handle for draggable toolbars */
    width: 10px;                    /* Width of the handle */
	height: 10px;
    margin: 4px;                    /* Margin around the handle */
}

QToolBar::separator {
    background-color: #5b5e60;      /* Light gray for separators */
    width: 1px;                     /* Thickness of the separator */
    height: 24px;                   /* Height of the separator */
    margin: 6px;                    /* Space around the separator */
}

QToolBar::item {
    padding: 4px;                   /* Padding for individual toolbar items */
}

/* QStatusBar */
QStatusBar {
    background-color: #2e2e2e;   /* Dark gray background */
    border-top: 1px solid #5b5e60; /* Light gray top border for separation */
    color: #ffffff;              /* White text */
    font-size: 13px;             /* Slightly smaller font for the status bar */
    padding: 6px;                /* Padding inside the status bar */
}

QStatusBar::item {
    border: none;                /* No border around individual status items */
    padding: 0px 5px;            /* Padding between status bar items */
}

QStatusBar QLabel {
    color: #ffffff;              /* White text for any QLabel inside the status bar */
    background-color: transparent; /* Ensure QLabel in status bar matches the bar's background */
}

QStatusBar::indicator {
    background-color: #4a90e2;   /* Optional indicator styling, e.g., for icons or status signals */
    border-radius: 4px;          /* Rounded corners for any indicator elements */
}

/* QGroupBox */
QGroupBox {
    background-color: #2e2e2e;        /* Dark gray background */
    border: 1px solid #5b5e60;        /* Light gray border */
    border-radius: 4px;               /* Rounded corners */
    margin-top: 15px;                 /* Space above the group box */
    padding-top: 0px;                    /* Padding inside the group box */
    color: #ffffff;                   /* White text for the title */
    font-weight: bold;                /* Bold title text */
}

QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top left;    /* Position the title at the top left */
    background-color: transparent;    /* Transparent background for the title */
    padding: 0 5px;                   /* Padding around the title */
    color: #ffffff;                   /* White text for the title */
}

QGroupBox::title:hover {
    color: #4a90e2;                   /* Light blue title on hover */
}

QGroupBox:flat {
    border: none;                     /* No border when the group box is flat */
}

QGroupBox:disabled {
    color: #777777;                   /* Lighter gray text for disabled group box */
    border-color: #5b5e60;            /* Keep the light gray border */
}

/* QGraphicsView */
QGraphicsView {
    background-color: #2e2e2e;  /* Dark gray background */
    border: 1px solid #5b5e60;  /* Light gray border */
    border-radius: 4px;         /* Rounded corners */
}

QGraphicsView:focus {
    border-color: #4a90e2;      /* Light blue border when focused */
    background-color: #333333;  /* Slightly lighter gray background on focus */
}

QGraphicsView:disabled {
    background-color: #2e2e2e;  /* Dark gray background when disabled */
    border-color: #5b5e60;      /* Light gray border for disabled state */
    color: #777777;             /* Lighter gray for disabled text or content */
}

QGraphicsView::viewport {
    background-color: #2e2e2e;  /* Dark gray background for the viewport */
}

/* QScrollArea
This covers around the outter edge, like 2-3px maybe */
QScrollArea {
    background-color: #2e2e2e;  /* Dark gray background */
    border: 1px solid #5b5e60;  /* Light gray border */
    border-radius: 4px;         /* Rounded corners */
    padding: 5px;               /* Padding inside the scroll area */
}

/* Alternatively, this may also target the viewport more directly
This covers the whole area, including above/below the scrollbar */
QScrollArea QWidget {
    background-color: #2e2e2e;          /* Ensures all content within is black */
}

/* QScrollArea Viewport
This covers above/below the scrollbar */
QScrollArea &gt; QWidget {
    background-color: #2e2e2e;          /* Background of the viewport widget */
}

/* Scroll Corner (the area between horizontal and vertical scroll bars) */
QScrollArea::corner {
    background-color: #2e2e2e;  /* Dark gray to match the overall scroll area */
}

QScrollBar:vertical {
    background: #111;
    width: 10px;
}

QScrollBar::handle:vertical {
    background: #61657B;
    min-height: 30px;
}

QScrollBar::handle:vertical:hover {
    background: #ff6b27;
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
    border: none;
    background: none;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {
    border: none;
    width: 0;
    height: 0;
    background: none;
}

QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    background: none;
}

/* QLabel */
QLabel {
    color: #ffffff;             /* White text */
}

/* QFrame */
QFrame {
    background-color: #2e2e2e;  /* Dark gray for frames */
}

/* QLineEdit */
QLineEdit {
    background-color: #2e2e2e;  /* Dark gray background for input fields */
    color: #ffffff;             /* White text */
    border: 1px solid #5b5e60;  /* Light gray border */
    border-radius: 4px;         /* Rounded corners */
}

QLineEdit:focus {
    border-color: #4a90e2;      /* Light blue border when focused */
    background-color: #333333;  /* Slightly lighter gray on focus */
}

/* QListWidget */
QListWidget {
    background-color: #2e2e2e;      /* Dark gray background */
    color: #ffffff;                 /* White text */
    border: 1px solid #5b5e60;      /* Light gray border */
    padding: 4px;                   /* Padding around the list */
}

QListWidget::item {
    background-color: transparent;  /* Transparent background for items */
    color: #ffffff;                 /* White text for list items */
    border: none;                   /* No border for list items */
}

QListWidget::item:selected {
    background-color: #4a90e2;      /* Light blue background when selected */
    color: #ffffff;                 /* Ensure text remains white when selected */
}

QListWidget::item:hover {
    background-color: #3d78b2;      /* Darker blue on hover */
    color: #ffffff;                 /* Ensure text remains white when hovered */
}

QListWidget::item:focus {
    border: 1px solid #4a90e2;      /* Light blue border on focus */
}

/* QPlainTextEdit */
QPlainTextEdit {
    background-color: #2b2b2b;  /* Darker gray background for text area */
    color: #ffffff;             /* White text */
    border: 1px solid #5b5e60;  /* Light gray border */
    border-radius: 0px;         /* No rounded corners */
    padding: 10px;              /* Comfortable padding for text input */
    line-height: 1.4;           /* Adjust line spacing for readability */
}

QPlainTextEdit:focus {
    border-color: #4a90e2;      /* Light blue border on focus */
    background-color: #3a3a3a;  /* Slightly lighter gray on focus */
}

/* QTabWidget */
QTabWidget::pane {
    background-color: #2e2e2e;      /* Dark gray background */
    border: 1px solid #5b5e60;      /* Light gray border around the pane */
    padding: 4px;                   /* Padding inside the pane */
}

QTabWidget::tab-bar {
    left: 0px;                      /* Space from the left */
}

/* QTabBar::tab */
QTabBar::tab {
    background-color: #3c3f41;      /* Dark gray background for tabs */
    color: #ffffff;                 /* White text for tabs */
    border-left: 1px solid #5b5e60;      /* Light gray border around tabs */
    border-top: 1px solid #5b5e60;
    border-right: 1px solid #5b5e60;
    padding: 4px 8px;              /* Padding for each tab */
    margin-left: 2px;                    /* Slight margin between tabs */
    margin-right: 2px;
    border-top-left-radius: 4px;    /* Rounded top corners */
    border-top-right-radius: 4px;   /* Rounded top corners */
}

/* Selected tab */
QTabBar::tab:selected {
    background-color: #4a90e2;      /* Light blue background for selected tab */
    color: #ffffff;                 /* White text for selected tab */
    border-color: #4a90e2;          /* Blue border for selected tab */
}

/* Hovered tab */
QTabBar::tab:hover {
    background-color: #3d78b2;      /* Darker blue on hover */
    color: #ffffff;                 /* White text */
}

/* Disabled tab */
QTabBar::tab:disabled {
    background-color: #2e2e2e;      /* Dark gray for disabled tab */
    color: #777777;                 /* Light gray text for disabled tabs */
}

/* Focused tab */
QTabBar::tab:focus {
    border: 1px solid #4a90e2;      /* Blue border when tab is focused */
}

/* Tab close button (optional) */
QTabBar::close-button {
    /* image: url(close-icon.png);     Replace with your close icon path */
    subcontrol-position: right;     /* Position the close button on the right */
    margin: 0 8px 0 0;              /* Spacing for the close button */
}
/*
QTabBar::close-button:hover {
    image: url(close-icon-hover.png);   Change icon on hover 
}*/

/* QComboBox */
QComboBox {
    background-color: #2e2e2e;       /* Dark gray background */
    color: #ffffff;                  /* White text */
    border: 1px solid #5b5e60;       /* Light gray border */
    border-radius: 4px;              /* Rounded corners */
    padding-left: 2px;                    /* Padding inside the combo box */
}

QComboBox:hover {
    background-color: #3a3a3a;       /* Slightly lighter gray on hover */
    border-color: #4a90e2;           /* Light blue border on hover */
}

QComboBox:focus {
    background-color: #333333;       /* Lighter gray on focus */
    border-color: #4a90e2;           /* Light blue border on focus */
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 30px;                      /* Width of the drop-down button */
    background-color: #2e2e2e;        /* Dark gray background for drop-down */
    border-left: 1px solid #5b5e60;   /* Light gray separator between drop-down button and combo box */
}

QComboBox::down-arrow {
    image: url(:/888EAC-20px/ICONS/888EAC-20px/arrow-down.svg);  /*Replace with your down arrow icon */
    width: 12px;                         /* Width of the arrow */
    height: 12px;                        /* Height of the arrow */
}

QComboBox::down-arrow:hover {
    image: url(:/888EAC-20px/ICONS/888EAC-20px/arrow-down.svg); /* Optional: different icon on hover */
}

QComboBox QAbstractItemView {
    background-color: #2e2e2e;        /* Dark gray background for drop-down list */
    color: #ffffff;                   /* White text */
    border: 1px solid #5b5e60;        /* Light gray border around the list */
    selection-background-color: #4a90e2;  /* Light blue background for selected item */
    selection-color: #ffffff;         /* White text for selected item */
}

QComboBox QAbstractItemView::item {
    background-color: transparent;    /* Transparent background for list items */
    padding: 6px;                     /* Padding for each item in the list */
}

QComboBox QAbstractItemView::item:selected {
    background-color: #4a90e2;        /* Light blue when an item is selected */
    color: #ffffff;                   /* White text for selected item */
}

QComboBox QAbstractItemView::item:hover {
    background-color: #3d78b2;        /* Darker blue on hover */
    color: #ffffff;                   /* White text when hovered */
}

QComboBox:disabled {
    background-color: #2e2e2e;        /* Dark gray background when disabled */
    color: #777777;                   /* Lighter gray text when disabled */
    border-color: #5b5e60;            /* Keep the light gray border */
}

/* QPushButton */
QPushButton {
    background-color: #3c3f41;  /* Dark gray background */
    color: #ffffff;             /* White text */
    border: 1px solid #5b5e60;  /* Light gray border */
    border-radius: 4px;         /* Rounded corners */
	padding: 0px 0px;
}

QPushButton:hover {
    background-color: #4a90e2;  /* Light blue on hover */
    border-color: #3d78b2;      /* Darker blue border */
}

QPushButton:pressed {
    background-color: #3d78b2;  /* Darker blue on press */
    border-color: #2a5f92;      /* Even darker border when pressed */
}

/* QCheckBox */
QCheckBox {
    color: #ffffff;                 /* White text for checkbox label */
    spacing: 6px;                   /* Space between checkbox and label */
}

QCheckBox::indicator {
    width: 14px;                    /* Set the size of the checkbox */
    height: 14px;
    background-color: #2e2e2e;      /* Dark gray background for the checkbox */
    border: 1px solid #5b5e60;      /* Light gray border */
    border-radius: 2px;             /* Slight rounding for modern look */
}

/* Hovered checkbox */
QCheckBox::indicator:hover {
    background-color: #3b73b4;      /* Light blue on hover */
    border-color: #ff050d;          /* Darker blue border on hover */
}

/*
red: ff050d
green: 0dce1d
*/

/* Checked checkbox */
QCheckBox::indicator:checked {
    background-color: #4a90e2;      /* Light blue when checked */
    border-color: #3d78b2;          /* Darker blue border when checked */
/*    image: url(:/checked-icon.png);  Replace with your checkmark icon if needed */
}

QCheckBox::indicator:checked:hover {
    border-color: #0dce1d;
}

/* Indeterminate checkbox (for tri-state checkboxes) */
QCheckBox::indicator:indeterminate {
    background-color: #4a90e2;      /* Light blue when in indeterminate state */
    border-color: #3d78b2;          /* Darker blue border */
/*    image: url(:/indeterminate-icon.png);  Replace with your indeterminate icon */
}

/* Pressed checkbox */
QCheckBox::indicator:pressed {
    background-color: #3d78b2;      /* Darker blue on press */
    border-color: #2a5f92;          /* Even darker border when pressed */
}

/* Disabled checkbox */
QCheckBox::indicator:disabled {
    background-color: #2e2e2e;      /* Dark gray when disabled */
    border-color: #5b5e60;          /* Light gray border */
    color: #777777;                 /* Light gray label when disabled */
}

/* QRadioButton */
QRadioButton {
    color: #ffffff;              /* White text */
    spacing: 5px;                /* Space between radio button and label */
}

QRadioButton::indicator {
    width: 14px;                 /* Size of the radio button */
    height: 14px;
    background-color: #2e2e2e;   /* Dark gray background for the indicator */
    border: 1px solid #5b5e60;   /* Light gray border */
    border-radius: 8px;          /* Circular radio button */
}

QRadioButton::indicator:hover {
    background-color: #4a90e2;   /* Light blue on hover */
    border-color: #3d78b2;       /* Darker blue border on hover */
}

QRadioButton::indicator:checked {
    background-color: #4a90e2;   /* Light blue when checked */
    border-color: #3d78b2;       /* Darker blue border when checked */
}

QRadioButton::indicator:pressed {
    background-color: #3d78b2;   /* Darker blue on press */
    border-color: #2a5f92;       /* Even darker border on press */
}

QRadioButton::indicator:checked:pressed {
    background-color: #3d78b2;   /* Darker blue when checked and pressed */
    border-color: #2a5f92;       /* Even darker border when checked and pressed */
}

/* QToolButton */
QToolButton {
    background-color: #3c3f41;    /* Dark gray background */
    color: #ffffff;               /* White text/icon */
    border: 1px solid #5b5e60;    /* Light gray border */
    border-radius: 4px;           /* Rounded corners */
    padding: 0px 0px;            /* Padding for comfortable button size */
}

QToolButton:hover {
    background-color: #4a90e2;    /* Light blue background on hover */
    border-color: #3d78b2;        /* Darker blue border on hover */
}

QToolButton:pressed {
    background-color: #3d78b2;    /* Darker blue background on press */
    border-color: #2a5f92;        /* Even darker border when pressed */
}

QToolButton:checked {
    background-color: #3d78b2;    /* Darker blue when checked */
    border-color: #2a5f92;        /* Border color when checked */
}

QToolButton:disabled {
    background-color: #2e2e2e;    /* Dark gray when disabled */
    color: #777777;               /* Lighter gray text/icon for disabled state */
    border-color: #5b5e60;        /* Keep the border color same as normal state */
}

/* QToolButton::menu-button */
QToolButton::menu-button {
    background-color: #3c3f41;      /* Dark gray background for menu button */
    border: 1px solid #5b5e60;      /* Light gray border for menu button */
    padding: 4px;                   /* Padding for the menu button */
}

QToolButton::menu-button:hover {
    background-color: #4a90e2;      /* Light blue on hover */
    border-color: #3d78b2;          /* Darker blue border on hover */
}

QToolButton::menu-button:pressed {
    background-color: #3d78b2;      /* Darker blue on press */
    border-color: #2a5f92;          /* Even darker border on press */
}</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <item>
    <widget class="QFrame" name="frame">
     <property name="styleSheet">
      <string notr="true">QFrame {background: transparent;}</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::Shape::NoFrame</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Shadow::Raised</enum>
     </property>
     <layout class="QHBoxLayout" name="horizontalLayout_2">
      <property name="leftMargin">
       <number>0</number>
      </property>
      <property name="topMargin">
       <number>0</number>
      </property>
      <property name="rightMargin">
       <number>0</number>
      </property>
      <property name="bottomMargin">
       <number>0</number>
      </property>
      <item>
       <widget class="QPlainTextEdit" name="console">
        <property name="font">
         <font>
          <pointsize>9</pointsize>
         </font>
        </property>
        <property name="frameShape">
         <enum>QFrame::Shape::NoFrame</enum>
        </property>
        <property name="horizontalScrollBarPolicy">
         <enum>Qt::ScrollBarPolicy::ScrollBarAlwaysOff</enum>
        </property>
        <property name="readOnly">
         <bool>true</bool>
        </property>
        <property name="tabStopDistance">
         <double>16.000000000000000</double>
        </property>
        <property name="placeholderText">
         <string>Build Mod Console...</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <widget class="QFrame" name="frame_2">
     <property name="styleSheet">
      <string notr="true">QFrame {
    border: 1px solid #555;
}</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::Shape::NoFrame</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Shadow::Raised</enum>
     </property>
     <layout class="QHBoxLayout" name="horizontalLayout">
      <property name="leftMargin">
       <number>6</number>
      </property>
      <property name="topMargin">
       <number>6</number>
      </property>
      <property name="rightMargin">
       <number>6</number>
      </property>
      <property name="bottomMargin">
       <number>6</number>
      </property>
      <item>
       <widget class="QPushButton" name="close_console_btn">
        <property name="text">
         <string>Close Console</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
