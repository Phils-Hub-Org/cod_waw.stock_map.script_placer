<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1120</width>
    <height>720</height>
   </rect>
  </property>
  <property name="minimumSize">
   <size>
    <width>1120</width>
    <height>720</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>Phils-Hub - CoD: WaW - Stock-Map Script-Placer</string>
  </property>
  <property name="styleSheet">
   <string notr="true">/* Central Widget */
QWidget#centralwidget {
    background-color: #1e1e1e;  /* Dark gray background */
}

/* QMenuBar */
QMenuBar {
    background-color: #2e2e2e;    /* Dark gray background */
    color: #ffffff;               /* White text */
    border-bottom: 1px solid #5b5e60;  /* Light gray border for separation */
}

QMenuBar::item {
    background-color: transparent; /* Transparent background */
    padding: 6px 6px;             /* Padding for menu items */
    color: #ffffff;                /* White text */
}

QMenuBar::item:selected {          /* Hovered menu item */
    background-color: #4a90e2;     /* Light blue on hover */
    color: #ffffff;                /* Ensure text remains white */
}

QMenuBar::item:pressed {           /* Pressed menu item */
    background-color: #3d78b2;     /* Darker blue on press */
    color: #ffffff;                /* Ensure text remains white */
}

/* QMenu */
QMenu {
    background-color: #2e2e2e;     /* Dark gray background for menus */
    border: 1px solid #5b5e60;     /* Light gray border */
}

QMenu::item {
    background-color: transparent; /* Transparent background for menu items */
    color: #ffffff;                /* White text */
	padding: 6px;
    margin-left: 6px;             /* Padding for each menu item */
}

QMenu::item:selected {             /* Hovered menu item */
    background-color: #4a90e2;     /* Light blue background on hover */
    color: #ffffff;                /* Ensure text remains white */
}

QMenu::item:pressed {              /* Pressed menu item */
    background-color: #3d78b2;     /* Darker blue background on press */
    color: #ffffff;                /* Ensure text remains white */
}

QMenu::separator {
    height: 1px;
    background-color: #5b5e60;     /* Light gray separator between items */
}

/* QMenu::indicator (checkboxes and radio buttons in menus) */
QMenu::indicator {
    width: 16px;
    height: 16px;
    background-color: #2e2e2e;     /* Dark gray background for indicators */
    border: 1px solid #5b5e60;     /* Light gray border */
    border-radius: 2px;            /* Slightly rounded corners */
}

QMenu::indicator:checked {
    background-color: #4a90e2;     /* Light blue when checked */
    border-color: #3d78b2;         /* Darker blue border when checked */
}

QMenu::indicator:unchecked {
    background-color: #2e2e2e;     /* Keep the dark gray when unchecked */
    border-color: #5b5e60;         /* Light gray border when unchecked */
}

/* QToolBar */
QToolBar {
    background-color: #2e2e2e;      /* Dark gray background */
    border: 1px solid #5b5e60;      /* Light gray border */
    padding: 4px;                   /* Padding inside the toolbar */
    spacing: 4px;                   /* Spacing between toolbar buttons */
}

QToolBar::handle {
    background-color: #5b5e60;      /* Light gray handle for draggable toolbars */
    width: 10px;                    /* Width of the handle */
	height: 10px;
    margin: 4px;                    /* Margin around the handle */
}

QToolBar::separator {
    background-color: #5b5e60;      /* Light gray for separators */
    width: 1px;                     /* Thickness of the separator */
    height: 24px;                   /* Height of the separator */
    margin: 6px;                    /* Space around the separator */
}

QToolBar::item {
    padding: 4px;                   /* Padding for individual toolbar items */
}

/* QStatusBar */
QStatusBar {
    background-color: #2e2e2e;   /* Dark gray background */
    border-top: 1px solid #5b5e60; /* Light gray top border for separation */
    color: #ffffff;              /* White text */
    font-size: 13px;             /* Slightly smaller font for the status bar */
    padding: 6px;                /* Padding inside the status bar */
}

QStatusBar::item {
    border: none;                /* No border around individual status items */
    padding: 0px 5px;            /* Padding between status bar items */
}

QStatusBar QLabel {
    color: #ffffff;              /* White text for any QLabel inside the status bar */
    background-color: transparent; /* Ensure QLabel in status bar matches the bar's background */
}

QStatusBar::indicator {
    background-color: #4a90e2;   /* Optional indicator styling, e.g., for icons or status signals */
    border-radius: 4px;          /* Rounded corners for any indicator elements */
}

/* Scroll Area Styling (optional) */
QScrollArea {
    background-color: transparent; /* Transparent to match the central widget */
    border: none;                  /* No border */
}

QScrollBar:vertical {
    background-color: #3c3f41;    /* Darker gray for scroll bar background */
    width: 12px;                  /* Scroll bar width */
    margin: 22px 0 22px 0;        /* Top and bottom margins */
}

QScrollBar::handle:vertical {
    background-color: #5b5e60;    /* Slightly lighter gray for scroll handle */
    min-height: 20px;
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
    background: none;             /* Remove arrows */
}

/* QLabel */
QLabel {
    color: #ffffff;             /* White text */
    font-size: 14px;            /* Set font size */
}

/* QFrame */
QFrame {
    background-color: #2e2e2e;  /* Dark gray for frames */
}

/* QLineEdit */
QLineEdit {
    background-color: #2e2e2e;  /* Dark gray background for input fields */
    color: #ffffff;             /* White text */
    border: 1px solid #5b5e60;  /* Light gray border */
    border-radius: 4px;         /* Rounded corners */
}

QLineEdit:focus {
    border-color: #4a90e2;      /* Light blue border when focused */
    background-color: #333333;  /* Slightly lighter gray on focus */
}

/* QListWidget */
QListWidget {
    background-color: #2e2e2e;      /* Dark gray background */
    color: #ffffff;                 /* White text */
    border: 1px solid #5b5e60;      /* Light gray border */
    padding: 4px;                   /* Padding around the list */
}

QListWidget::item {
    background-color: transparent;  /* Transparent background for items */
    color: #ffffff;                 /* White text for list items */
    border: none;                   /* No border for list items */
}

QListWidget::item:selected {
    background-color: #4a90e2;      /* Light blue background when selected */
    color: #ffffff;                 /* Ensure text remains white when selected */
}

QListWidget::item:hover {
    background-color: #3d78b2;      /* Darker blue on hover */
    color: #ffffff;                 /* Ensure text remains white when hovered */
}

QListWidget::item:focus {
    border: 1px solid #4a90e2;      /* Light blue border on focus */
}


/* QPlainTextEdit */
QPlainTextEdit {
    background-color: #2b2b2b;  /* Darker gray background for text area */
    color: #ffffff;             /* White text */
    border: 1px solid #5b5e60;  /* Light gray border */
    border-radius: 0px;         /* No rounded corners */
    padding: 10px;              /* Comfortable padding for text input */
    font-size: 13px;            /* Slightly smaller font */
    line-height: 1.4;           /* Adjust line spacing for readability */
}

QPlainTextEdit:focus {
    border-color: #4a90e2;      /* Light blue border on focus */
    background-color: #3a3a3a;  /* Slightly lighter gray on focus */
}

/* QPushButton */
QPushButton {
    background-color: #3c3f41;  /* Dark gray background */
    color: #ffffff;             /* White text */
    border: 1px solid #5b5e60;  /* Light gray border */
    border-radius: 4px;         /* Rounded corners */
	padding: 0px 0px;
}

QPushButton:hover {
    background-color: #4a90e2;  /* Light blue on hover */
    border-color: #3d78b2;      /* Darker blue border */
}

QPushButton:pressed {
    background-color: #3d78b2;  /* Darker blue on press */
    border-color: #2a5f92;      /* Even darker border when pressed */
}

/* QRadioButton */
QRadioButton {
    color: #ffffff;              /* White text */
    font-size: 14px;             /* Font size for readability */
    spacing: 5px;                /* Space between radio button and label */
}

QRadioButton::indicator {
    width: 16px;                 /* Size of the radio button */
    height: 16px;
    background-color: #2e2e2e;   /* Dark gray background for the indicator */
    border: 1px solid #5b5e60;   /* Light gray border */
    border-radius: 8px;          /* Circular radio button */
}

QRadioButton::indicator:hover {
    background-color: #4a90e2;   /* Light blue on hover */
    border-color: #3d78b2;       /* Darker blue border on hover */
}

QRadioButton::indicator:checked {
    background-color: #4a90e2;   /* Light blue when checked */
    border-color: #3d78b2;       /* Darker blue border when checked */
}

QRadioButton::indicator:pressed {
    background-color: #3d78b2;   /* Darker blue on press */
    border-color: #2a5f92;       /* Even darker border on press */
}

QRadioButton::indicator:checked:pressed {
    background-color: #3d78b2;   /* Darker blue when checked and pressed */
    border-color: #2a5f92;       /* Even darker border when checked and pressed */
}

/* QToolButton */
QToolButton {
    background-color: #3c3f41;    /* Dark gray background */
    color: #ffffff;               /* White text/icon */
    border: 1px solid #5b5e60;    /* Light gray border */
    border-radius: 4px;           /* Rounded corners */
    padding: 6px 12px;            /* Padding for comfortable button size */
}

QToolButton:hover {
    background-color: #4a90e2;    /* Light blue background on hover */
    border-color: #3d78b2;        /* Darker blue border on hover */
}

QToolButton:pressed {
    background-color: #3d78b2;    /* Darker blue background on press */
    border-color: #2a5f92;        /* Even darker border when pressed */
}

QToolButton:checked {
    background-color: #3d78b2;    /* Darker blue when checked */
    border-color: #2a5f92;        /* Border color when checked */
}

QToolButton:disabled {
    background-color: #2e2e2e;    /* Dark gray when disabled */
    color: #777777;               /* Lighter gray text/icon for disabled state */
    border-color: #5b5e60;        /* Keep the border color same as normal state */
}

/* QToolButton::menu-button */
QToolButton::menu-button {
    background-color: #3c3f41;      /* Dark gray background for menu button */
    border: 1px solid #5b5e60;      /* Light gray border for menu button */
    padding: 4px;                   /* Padding for the menu button */
}

QToolButton::menu-button:hover {
    background-color: #4a90e2;      /* Light blue on hover */
    border-color: #3d78b2;          /* Darker blue border on hover */
}

QToolButton::menu-button:pressed {
    background-color: #3d78b2;      /* Darker blue on press */
    border-color: #2a5f92;          /* Even darker border on press */
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <property name="styleSheet">
    <string notr="true"/>
   </property>
   <layout class="QVBoxLayout" name="verticalLayout">
    <property name="spacing">
     <number>6</number>
    </property>
    <property name="leftMargin">
     <number>0</number>
    </property>
    <property name="topMargin">
     <number>0</number>
    </property>
    <property name="rightMargin">
     <number>0</number>
    </property>
    <property name="bottomMargin">
     <number>0</number>
    </property>
    <item>
     <widget class="QFrame" name="frame_3">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Preferred" vsizetype="Expanding">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame {margin: 6px;}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::Shape::NoFrame</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Shadow::Raised</enum>
      </property>
      <layout class="QHBoxLayout" name="horizontalLayout">
       <property name="leftMargin">
        <number>0</number>
       </property>
       <property name="topMargin">
        <number>0</number>
       </property>
       <property name="rightMargin">
        <number>0</number>
       </property>
       <property name="bottomMargin">
        <number>0</number>
       </property>
       <item>
        <widget class="QFrame" name="frame">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="frameShape">
          <enum>QFrame::Shape::NoFrame</enum>
         </property>
         <property name="frameShadow">
          <enum>QFrame::Shadow::Raised</enum>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QStatusBar" name="statusBar"/>
  <widget class="QToolBar" name="toolBar">
   <property name="windowTitle">
    <string>toolBar</string>
   </property>
   <property name="movable">
    <bool>true</bool>
   </property>
   <property name="allowedAreas">
    <set>Qt::ToolBarArea::AllToolBarAreas</set>
   </property>
   <attribute name="toolBarArea">
    <enum>TopToolBarArea</enum>
   </attribute>
   <attribute name="toolBarBreak">
    <bool>false</bool>
   </attribute>
  </widget>
  <widget class="QMenuBar" name="menuBar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1120</width>
     <height>29</height>
    </rect>
   </property>
   <property name="defaultUp">
    <bool>false</bool>
   </property>
   <property name="nativeMenuBar">
    <bool>true</bool>
   </property>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>File</string>
    </property>
    <addaction name="actionAbout"/>
   </widget>
   <addaction name="menuFile"/>
  </widget>
  <action name="actionAbout">
   <property name="text">
    <string>About</string>
   </property>
  </action>
 </widget>
 <resources>
  <include location="../resources.qrc"/>
 </resources>
 <connections/>
</ui>
